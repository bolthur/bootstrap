diff --git config.sub config.sub
index a318a468685..b6a05321538 100755
--- config.sub
+++ config.sub
@@ -1366,7 +1366,7 @@ case $os in
 	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
 	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
 	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \
-	     | nsk* | powerunix)
+	     | nsk* | powerunix | bolthur*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	qnx*)
diff --git fixincludes/mkfixinc.sh fixincludes/mkfixinc.sh
index df90720b716..f63b159e51b 100755
--- fixincludes/mkfixinc.sh
+++ fixincludes/mkfixinc.sh
@@ -20,7 +20,8 @@ case $machine in
     powerpcle-*-eabisim* | \
     powerpcle-*-eabi* | \
     *-*-vxworks7* | \
-    *-musl* )
+    *-musl* | \
+    *-bolthur-* )
 	#  IF there is no include fixing,
 	#  THEN create a no-op fixer and exit
 	(echo "#! /bin/sh" ; echo "exit 0" ) > ${target}
diff --git gcc/config.gcc gcc/config.gcc
index 6fcdd771d4c..3aec2ca9c2d 100644
--- gcc/config.gcc
+++ gcc/config.gcc
@@ -180,7 +180,7 @@
 #			the --with-sysroot configure option or the
 #			--sysroot command line option is used this
 #			will be relative to the sysroot.
-# target_type_format_char 
+# target_type_format_char
 # 			The default character to be used for formatting
 #			the attribute in a
 #			.type symbol_name, ${t_t_f_c}<property>
@@ -675,6 +675,12 @@ x86_cpus="generic intel"
 
 # Common parts for widely ported systems.
 case ${target} in
+*-bolthur-*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=wrap
+  ;;
 *-*-darwin*)
   tmake_file="t-darwin "
   tm_file="${tm_file} darwin.h"
@@ -1063,7 +1069,7 @@ case ${target} in
 esac
 
 case ${target} in
-aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
+aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems* | aarch64-*-bolthur*)
 	tm_file="${tm_file} dbxelf.h elfos.h newlib-stdint.h"
 	tm_file="${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-elf-raw.h"
 	tmake_file="${tmake_file} aarch64/t-aarch64"
@@ -1077,6 +1083,9 @@ aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)
 	aarch64-*-rtems*)
 	  	tm_file="${tm_file} rtems.h aarch64/rtems.h"
 		;;
+	aarch64-*-bolthur*)
+	  	tm_file="${tm_file} bolthur.h"
+		;;
 	esac
 	case $target in
 	aarch64_be-*)
@@ -1328,7 +1337,7 @@ arm*-*-phoenix*)
 	tmake_file="${tmake_file} arm/t-arm arm/t-bpabi arm/t-phoenix"
 	target_cpu_cname="arm7tdmi"
 	;;
-arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems* | arm*-*-fuchsia*)
+arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems* | arm*-*-fuchsia* | arm*-bolthur-*)
 	case ${target} in
 	arm*eb-*-eabi*)
 	  tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1"
@@ -1338,6 +1347,11 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems* | arm*-*-fuchsia*)
 	tmake_file="${tmake_file} arm/t-arm arm/t-arm-elf"
 	target_cpu_cname="arm7tdmi"
 	case ${target} in
+	arm*-bolthur-*)
+	  tm_file="${tm_file} bolthur.h newlib-stdint.h" #glibc-stdint.h
+	  tmake_file="${tmake_file} arm/t-bpabi"
+	  use_gcc_stdint=wrap
+	  ;;
 	arm*-*-eabi*)
 	  tm_file="$tm_file newlib-stdint.h"
 	  tmake_file="${tmake_file} arm/t-bpabi"
diff --git gcc/config/bolthur.h gcc/config/bolthur.h
new file mode 100644
index 00000000000..f5e5deaf241
--- /dev/null
+++ gcc/config/bolthur.h
@@ -0,0 +1,49 @@
+
+/* Useful if you wish to make target-specific GCC changes. */
+#undef TARGET_BOLTHUR
+#define TARGET_BOLTHUR 1
+
+/* Machine dependent libraries. */
+#undef LIB_SPEC
+#define LIB_SPEC "%{!shared: -lc -lg -lm %{!specs=bolthur.specs:-lgloss-bolthur}}" /* link against C standard library */
+
+/* Files that are linked before user code. */
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "%{!shared: bolthur-crt0.o%s} crti.o%s %{!shared: crtbegin.o%s} %{shared: crtbeginS.o%s}"
+
+/* Files that are linked after user code. */
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "%{!shared: crtend.o%s} %{shared: crtendS.o%s} crtn.o%s"
+
+// /* Dynamic linker */
+// #define DYNAMIC_LINKER "/lib/dl.so"
+
+/* Linker enforce 4K pages and handle shared libraries */
+#undef LINK_SPEC
+#define LINK_SPEC "-z max-page-size=4096 %{shared:-shared} %{!shared: %{static:-static} %{!static: %{rdynamic:-export-dynamic}}}"
+//#define LINK_SPEC "-z max-page-size=4096 %{shared:-shared} %{!shared: %{static:-static} %{!static: -dynamic-linker " DYNAMIC_LINKER "}}"
+
+// /* Start file prefix  */
+// #undef STANDARD_STARTFILE_PREFIX
+// #define STANDARD_STARTFILE_PREFIX "/usr/lib/"
+// /* Default include directory */
+// #undef GCC_INCLUDE_DIR
+// #define GCC_INCLUDE_DIR "/usr/include"
+//
+// /* Include directory */
+// #undef GPLUSPLUS_INCLUDE_DIR
+// #define GPLUSPLUS_INCLUDE_DIR "/usr/include/g++"
+//
+// /* Compiler backend folder */
+// #undef STANDARD_EXEC_PREFIX
+// #define STANDARD_EXEC_PREFIX "/usr/libexec/"
+
+/* Additional predefined macros. */
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS() \
+  do { \
+    builtin_define ( "__bolthur__" ); \
+    builtin_define ( "__unix__" ); \
+    builtin_assert ( "system=bolthur"); \
+    builtin_assert ( "system=unix"); \
+  } while(0);
diff --git libgcc/config.host libgcc/config.host
index c529cc40f0c..250cb43677f 100644
--- libgcc/config.host
+++ libgcc/config.host
@@ -103,7 +103,7 @@ arm*-*-*)
 	;;
 avr-*-*)
 	cpu_type=avr
-	;;    
+	;;
 bfin*-*)
 	cpu_type=bfin
 	;;
@@ -248,6 +248,10 @@ case ${host} in
   tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-fuchsia"
   extra_parts="crtbegin.o crtend.o"
   ;;
+*-*-bolthur*)
+  tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-slibgcc"
+  extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o"
+  ;;
 *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-gnu* | *-*-kopensolaris*-gnu | *-*-uclinuxfdpiceabi)
   tmake_file="$tmake_file t-crtstuff-pic t-libgcc-pic t-eh-dw2-dip t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-linux"
   extra_parts="crtbegin.o crtbeginS.o crtbeginT.o crtend.o crtendS.o"
@@ -359,6 +363,13 @@ i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 esac
 
 case ${host} in
+aarch64*-bolthur-*)
+	extra_parts="$extra_parts crti.o crtn.o crtfastmath.o"
+	tmake_file="${tmake_file} ${cpu_type}/t-aarch64"
+	tmake_file="${tmake_file} ${cpu_type}/t-lse t-slibgcc-libgcc"
+	tmake_file="${tmake_file} ${cpu_type}/t-softfp t-softfp t-crtfm"
+	md_unwind_header=aarch64/aarch64-unwind.h
+	;;
 aarch64*-*-elf | aarch64*-*-rtems*)
 	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
 	extra_parts="$extra_parts crtfastmath.o"
@@ -493,7 +504,15 @@ arm*-*-phoenix*)
 	extra_parts="crtbegin.o crtend.o crti.o crtn.o"
 	unwind_header=config/arm/unwind-arm.h
 	;;
-arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems*)
+arm*-bolthur-*)
+	tm_file="$tm_file arm/bpabi-lib.h"
+	extra_parts="$extra_parts crti.o crtn.o crtfastmath.o"
+	tmake_file="${tmake_file} arm/t-arm arm/t-elf t-fixedpoint-gnu-prefix"
+	tmake_file="${tmake_file} arm/t-bpabi t-crtfm t-softfp-sfdf t-softfp-excl"
+	tmake_file="${tmake_file} arm/t-softfp t-softfp"
+	unwind_header=config/arm/unwind-arm.h
+	;;
+arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems* )
 	tmake_file="${tmake_file} arm/t-arm arm/t-elf t-fixedpoint-gnu-prefix"
 	tm_file="$tm_file arm/bpabi-lib.h"
 	case ${host} in
@@ -927,7 +946,7 @@ lm32-*-rtems*)
 lm32-*-uclinux*)
         extra_parts="$extra_parts crtbegin.o crtendS.o crtbeginT.o"
         tmake_file="lm32/t-lm32 lm32/t-uclinux t-libgcc-pic t-softfp-sfdf t-softfp"
-	;;	
+	;;
 m32r-*-elf*)
 	tmake_file="$tmake_file m32r/t-m32r t-fdpbit"
 	extra_parts="$extra_parts crtinit.o crtfini.o"
diff --git libstdc++-v3/crossconfig.m4 libstdc++-v3/crossconfig.m4
index fe182883536..86ca0ebbe03 100644
--- libstdc++-v3/crossconfig.m4
+++ libstdc++-v3/crossconfig.m4
@@ -86,7 +86,7 @@ case "${host}" in
 
   *-freebsd*)
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
-    AC_SUBST(SECTION_FLAGS) 
+    AC_SUBST(SECTION_FLAGS)
     GLIBCXX_CHECK_LINKER_FEATURES
     AC_DEFINE(HAVE_SETENV)
     AC_DEFINE(HAVE_FINITEF)
@@ -136,6 +136,13 @@ case "${host}" in
     AC_SUBST(SECTION_FLAGS)
     ;;
 
+  *-bolthur*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
+
   *-hpux*)
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
     AC_SUBST(SECTION_FLAGS)
@@ -201,7 +208,7 @@ case "${host}" in
     ;;
   *-netbsd* | *-openbsd*)
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
-    AC_SUBST(SECTION_FLAGS) 
+    AC_SUBST(SECTION_FLAGS)
     GLIBCXX_CHECK_LINKER_FEATURES
     AC_DEFINE(HAVE_FINITEF)
     AC_DEFINE(HAVE_FINITE)
@@ -222,7 +229,7 @@ case "${host}" in
     ;;
   *-qnx6.1* | *-qnx6.2*)
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
-    AC_SUBST(SECTION_FLAGS) 
+    AC_SUBST(SECTION_FLAGS)
     GLIBCXX_CHECK_LINKER_FEATURES
     AC_DEFINE(HAVE_COSF)
     AC_DEFINE(HAVE_COSL)
diff --git libtool.m4 libtool.m4
index 00206549f54..8858b1bf674 100644
--- libtool.m4
+++ libtool.m4
@@ -1139,7 +1139,7 @@ fi
 # Invoke $ECHO with all args, space-separated.
 func_echo_all ()
 {
-    $ECHO "$*" 
+    $ECHO "$*"
 }
 
 case "$ECHO" in
@@ -2519,6 +2519,17 @@ netbsd*)
   hardcode_into_libs=yes
   ;;
 
+bolthur*)
+  version_type=linux # correct to gnu/linux during the next big refactor
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
 newsos6)
   version_type=linux
   library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
@@ -3062,6 +3073,10 @@ haiku*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
+bolthur*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
 hpux10.20* | hpux11*)
   lt_cv_file_magic_cmd=/usr/bin/file
   case $host_cpu in
